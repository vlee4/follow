{"version":3,"sources":["Components/Navbar.js","Components/Home.js","Components/SingleExpense.js","Components/AddExpense.js","Store/expenseReducer.js","Components/Expenses.js","Components/Accounts.js","Components/Categories.js","Components/View.js","Components/ExpenseTracker.js","Components/Routes.js","App.js","Store/index.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","connect","props","DATE","Date","date","toLocaleDateString","year","month","day","AMOUNT","Intl","NumberFormat","style","currency","minimumFractionDigits","format","amount","id","account","category","AddExpense","state","handleSubmit","bind","handleChange","e","preventDefault","console","log","this","setState","adding","target","name","value","onSubmit","type","onChange","required","placeholder","autoComplete","onClick","cancel","React","Component","dispatch","addExpenseForm","exp","expense","localStorage","getItem","existingExp","JSON","parse","push","setItem","stringify","addExpense","Expenses","expenses","handleAddition","getExp","mockData","Account","Category","Amount","length","Object","keys","map","key","idx","entry","View","tab","ExpenseTracker","handleClick","Routes","exact","path","component","Home","Tracker","App","Navbar","href","reducer","combineReducers","action","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b53bc7af.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n  return (\n    <div className=\"navbar\">\n      <Link className=\"title\" to=\"/follow/\">\n        <h1 className=\"title\">Follow Your Money</h1>\n      </Link>\n      <div className=\"navLinks\">\n        <Link to=\"/follow/\"> Home </Link>\n        <Link to=\"/follow/tracker\"> Expense Tracker </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Welcome Home</h2>\n      <div>This is the homepage to be!</div>\n    </div>\n  );\n}\n\nexport default connect()(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction SingleExpense(props) {\n  //formatting dates\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  };\n  let DATE = new Date(props.date).toLocaleDateString(\"en-US\", options);\n  // var d = new Date(\"10 12 14\").toLocaleDateString(\"en-US\",options);\n\n  //formatting currency\n  const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  let AMOUNT = currencyFormatter.format(props.amount);\n  return (\n    <tr>\n      <td>{props.id || \"ID\"}</td>\n      <td>{DATE || `January 3, 2020`}</td>\n      <td>{props.account || `Acct #1337108049384039 839doj odsf 82`}</td>\n      <td>{props.category || \"Entertainment\"}</td>\n      <td>{AMOUNT || \"$100\"}</td>\n      <td>\n        <button>Edit</button>\n      </td>\n      <td>\n        <button>Delete</button>\n      </td>\n    </tr>\n  );\n}\n\nexport default connect()(SingleExpense);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postExpense } from \"../Store/expenseReducer\";\n\nclass AddExpense extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"-\",\n      date: \"\",\n      account: \"\",\n      category: \"\",\n      amount: 0,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"form values:\", this.state);\n    this.setState({ adding: false });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"addExpenseForm\">\n        <div>4</div>\n        <input\n          name=\"date\"\n          type=\"date\"\n          value={this.state.date}\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          name=\"account\"\n          placeholder=\"Account#\"\n          value={this.state.account}\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          name=\"category\"\n          placeholder=\"Category\"\n          value={this.state.category}\n          onChange={this.handleChange}\n          autoComplete=\"on\"\n          required\n        />\n        <input\n          name=\"amount\"\n          placeholder=\"Amount\"\n          type=\"currency\"\n          value={this.state.amount}\n          onChange={this.handleChange}\n          required\n        />\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={this.cancel}>\n          Cancel\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    addExpenseForm: (exp) => dispatch(postExpense(exp)),\n  };\n};\n\nexport default connect(null, mapDispatch)(AddExpense);\n","//Actions\nconst GET_EXPENSES = \"GET_EXPENSES\";\nconst ADD_EXPENSE = \"ADD_EXPENSE\";\n\n//Action Creators\nconst fetchExpenses = (expenses) => {\n  return {\n    type: GET_EXPENSES,\n    expenses,\n  };\n};\n\nconst addExpense = (expense) => {\n  return {\n    type: ADD_EXPENSE,\n    expense,\n  };\n};\n\nexport const findExpenses = () => {\n  return (dispatch) => {\n    if (localStorage.getItem(\"Expenses\")) {\n      const existingExp = JSON.parse(localStorage.getItem(\"Expenses\"));\n      dispatch(fetchExpenses(existingExp));\n    }\n  };\n};\n\nexport const postExpense = (expense) => {\n  return (dispatch) => {\n    if (localStorage.getItem(\"Expenses\")) {\n      const existingExp = JSON.parse(localStorage.getItem(\"Expenses\"));\n      existingExp.push(expense);\n      localStorage.setItem(\"Expenses\", JSON.stringify(existingExp));\n    } else {\n      localStorage.setItem(\"Expenses\", JSON.stringify([expense]));\n    }\n    dispatch(addExpense(expense, \"complete\"));\n  };\n};\n\n/* state={\n    adding: t/f;\n    expenses: [\n      { id: \"-\",\n      date: \"\",\n      account: \"\",\n      category: \"\",\n      amount: 0,}\n      {},\n      ...\n    ]\n}\n*/\n\n//Reduecr\nexport default function expenseReducer(state = {}, action) {\n  switch (action.type) {\n    case GET_EXPENSES:\n      return { ...state, expenses: [...action.expenses] };\n    case ADD_EXPENSE:\n      return { adding: false, expenses: [...state.expenses, action.expense] };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport SingleExpense from \"./SingleExpense\";\nimport AddExpense from \"./AddExpense\";\nimport { findExpenses } from \"../Store/expenseReducer\";\nimport { connect } from \"react-redux\";\n\nclass Expenses extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      adding: false,\n      expenses: [],\n    };\n    this.handleAddition = this.handleAddition.bind(this);\n    this.cancel = this.cancel.bind(this);\n  }\n\n  handleAddition() {\n    this.setState({ adding: true });\n  }\n\n  cancel() {\n    this.setState({ adding: false });\n  }\n\n  componentDidMount() {\n    const exp = this.props.getExp();\n    console.log(\"Here's the expenses\", exp);\n    if (exp) {\n      this.setState({ expenses: exp });\n    }\n  }\n\n  render() {\n    const mockData = [\n      {\n        id: 1,\n        Date: \"10 13 95\",\n        Account: \"Acct #1337\",\n        Category: \"Entertainment\",\n        Amount: 100,\n      },\n      {\n        id: 2,\n        Date: \"9 12 95\",\n        Account: \"Acct #0613\",\n        Category: \"Art\",\n        Amount: 1030,\n      },\n      {\n        id: 3,\n        Date: \"12 31 95\",\n        Account: \"Acct #1337\",\n        Category: \"Drama\",\n        Amount: 10330,\n      },\n    ];\n    if (this.state.expenses.length === 0) {\n      return (\n        <div>\n          <h3>EXPENSES</h3>\n          <div>\n            There are currently no expenses to be displayed. Please add an entry\n            to begin tracking your expenses.\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"expensesWindow\">\n        <h3>EXPENSES</h3>\n        <table>\n          <thead>\n            <tr>\n              {Object.keys(mockData[0]).map((key, idx) => {\n                return <td key={`${key}_${idx}`}>{key}</td>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {mockData.map((entry, idx) => {\n              let { id, Date, Account, Category, Amount } = entry;\n              return (\n                <SingleExpense\n                  key={`${id}_${idx}`}\n                  id={id}\n                  date={Date}\n                  account={Account}\n                  category={Category}\n                  amount={Amount}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n        {this.state.adding ? <AddExpense /> : \"\"}\n        {this.state.adding ? (\n          <button type=\"button\" onClick={this.cancel}>\n            Cancel\n          </button>\n        ) : (\n          <button name=\"addExpense\" onClick={this.handleAddition}>\n            +\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    expenses: state.expenses,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    getExp: () => dispatch(findExpenses()),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Expenses);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Accounts() {\n  return (\n    <div>\n      <h3>ACCOUNTS</h3>\n    </div>\n  );\n}\n\nexport default connect()(Accounts);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Categories() {\n  return (\n    <div>\n      <h3>CATEGORIES</h3>\n    </div>\n  );\n}\n\nexport default connect()(Categories);\n","import React from \"react\";\n// import SingleExpense from \"./SingleExpense\";\nimport Expenses from \"./Expenses\";\nimport Accounts from \"./Accounts\";\nimport Categories from \"./Categories\";\nimport { connect } from \"react-redux\";\n\nclass View extends React.Component {\n  render() {\n    // const mockData = [\n    //   {\n    //     id: 1,\n    //     Date: \"10 13 95\",\n    //     Account: \"Acct #1337\",\n    //     Category: \"Entertainment\",\n    //     Amount: 100,\n    //   },\n    //   {\n    //     id: 2,\n    //     Date: \"9 12 95\",\n    //     Account: \"Acct #0613\",\n    //     Category: \"Art\",\n    //     Amount: 1030,\n    //   },\n    //   {\n    //     id: 3,\n    //     Date: \"12 31 95\",\n    //     Account: \"Acct #1337\",\n    //     Category: \"Drama\",\n    //     Amount: 10330,\n    //   },\n    // ];\n    if (!this.props.tab) {\n      return <div>Please select how you would like to view your expenses</div>;\n    } else if (this.props.tab === \"Accounts\") {\n      return <Accounts />;\n    } else if (this.props.tab === \"Categories\") {\n      return <Categories />;\n    } else {\n      return <Expenses />;\n    }\n  }\n}\nexport default connect()(View);\n","import React from \"react\";\nimport View from \"./View\";\nimport { connect } from \"react-redux\";\n\nclass ExpenseTracker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tab: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(e) {\n    this.setState({ tab: e.target.value });\n  }\n  render() {\n    return (\n      <div className=\"tracker\">\n        <h2>EXPENSE TRACKER</h2>\n        <div>Choose what you want to view</div>\n        <div className=\"trackerView\">\n          <button value=\"Expenses\" onClick={this.handleClick}>\n            Expenses\n          </button>\n          <button value=\"Accounts\" onClick={this.handleClick}>\n            Accounts\n          </button>\n          <button value=\"Categories\" onClick={this.handleClick}>\n            Categories\n          </button>\n        </div>\n        <View tab={this.state.tab} />\n      </div>\n    );\n  }\n}\n\nexport default connect()(ExpenseTracker);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Tracker from \"./ExpenseTracker\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/follow/\" component={Home} />\n      <Route path=\"/follow/tracker\" component={Tracker} />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Routes from \"./Components/Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Routes />\n      </Router>\n      <footer className=\"foot\">\n        <div>Created: September 2020</div>\n        <div>\n          Source Code: <a href=\"https://github.com/vlee4/follow/\">Github</a>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","//Redux Store\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport expenseReducer from \"./expenseReducer\";\n\nconst reducer = combineReducers({\n  expenses: expenseReducer,\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\n\nconst store = createStore(reducer, middleware);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}